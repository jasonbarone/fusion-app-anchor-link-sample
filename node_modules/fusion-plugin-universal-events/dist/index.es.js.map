{"version":3,"file":"index.es.js","sources":["../src/emitter.js","../src/server.js","../src/storage/in-memory.js","../src/storage/local-storage.js","../src/storage/index.js","../src/browser.js","../src/index.js"],"sourcesContent":["/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Context} from 'fusion-core';\n\nimport type {IEmitter} from './types.js';\n\nconst globalEventType = '*';\nexport default class UniversalEmitter implements IEmitter {\n  handlers: any;\n  mappers: any;\n\n  constructor() {\n    this.handlers = {};\n    this.mappers = {};\n  }\n  map(...args: *): * {\n    const {type, callback} = getArgs(args);\n    if (!this.mappers[type]) this.mappers[type] = [];\n    this.mappers[type].push(callback);\n  }\n  on(...args: *): * {\n    const {type, callback} = getArgs(args);\n    if (!this.handlers[type]) this.handlers[type] = [];\n    this.handlers[type].push(callback);\n  }\n  off(...args: *): * {\n    const {type, callback} = getArgs(args);\n    const index = this.handlers[type].indexOf(callback);\n    if (index > -1) this.handlers[type].splice(index, 1);\n  }\n  mapEvent(type: mixed, payload: mixed, ctx?: Context): mixed {\n    const globalMappers = this.mappers[globalEventType] || [];\n    const mappers = (this.mappers[type] || []).concat(globalMappers);\n    return mappers.reduce((payload, mapper) => {\n      return mapper(payload, ctx, type);\n    }, payload);\n  }\n  handleEvent(type: mixed, payload: mixed, ctx?: Context): void {\n    const globalHandlers = this.handlers[globalEventType] || [];\n    const handlers = (this.handlers[type] || []).concat(globalHandlers);\n    handlers.forEach(handler => handler(payload, ctx, type));\n  }\n\n  /* eslint-disable-next-line  no-unused-vars */\n  from(ctx: Context) {\n    throw new Error('Not implemented.');\n  }\n  /* eslint-disable-next-line  no-unused-vars */\n  emit(type: mixed, payload: mixed, ctx?: Context) {\n    // throw new Error('Not implemented.');\n  }\n  /* eslint-disable-next-line  no-unused-vars */\n  setFrequency(frequency: number) {\n    throw new Error('Not implemented.');\n  }\n  teardown() {\n    throw new Error('Not implemented.');\n  }\n  flush() {\n    throw new Error('Not implemented.');\n  }\n}\n\nfunction validateHandler(handler) {\n  if (typeof handler !== 'function')\n    throw new TypeError('handler must be a function');\n}\n\nfunction getArgs(args) {\n  const type = typeof args[0] === 'string' ? args[0] : globalEventType;\n  const callback = args[1] || args[0];\n  validateHandler(callback);\n  return {type, callback};\n}\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-env node */\nimport {memoize, createPlugin} from 'fusion-core';\nimport type {FusionPlugin, Context} from 'fusion-core';\n\nimport Emitter from './emitter.js';\nimport type {\n  IEmitter,\n  UniversalEventsPluginDepsType as DepsType,\n} from './types.js';\n\nexport class GlobalEmitter extends Emitter {\n  from: any;\n  ctx: any;\n\n  constructor() {\n    super();\n    this.from = memoize(ctx => {\n      return new ScopedEmitter(ctx, this);\n    });\n  }\n  emit(type: mixed, payload: mixed, ctx?: Context): void {\n    payload = super.mapEvent(type, payload, this.ctx);\n    super.handleEvent(type, payload, ctx);\n  }\n  // mirror browser api\n  setFrequency() {}\n  teardown() {}\n}\n\nclass ScopedEmitter extends Emitter {\n  ctx: any;\n  parent: any;\n  batch: any;\n  flushed: any;\n\n  constructor(ctx, parent) {\n    super();\n    this.ctx = ctx;\n    this.parent = parent;\n    this.batch = [];\n    this.flushed = false;\n  }\n  emit(type, payload) {\n    // this logic exists to manage ensuring we send events after the batch\n    if (this.flushed) {\n      this.handleBatchedEvent({type, payload});\n    } else {\n      this.batch.push({type, payload});\n    }\n  }\n  handleBatchedEvent({type, payload}) {\n    payload = super.mapEvent(type, payload, this.ctx);\n    payload = this.parent.mapEvent(type, payload, this.ctx);\n    super.handleEvent(type, payload, this.ctx);\n    this.parent.handleEvent(type, payload, this.ctx);\n  }\n  flush() {\n    for (let index = 0; index < this.batch.length; index++) {\n      this.handleBatchedEvent(this.batch[index]);\n    }\n    this.batch = [];\n    this.flushed = true;\n  }\n  // mirror browser api\n  setFrequency() {}\n  teardown() {}\n}\n\nconst plugin =\n  __NODE__ &&\n  createPlugin({\n    provides: () => new GlobalEmitter(),\n    middleware: (deps, globalEmitter) => {\n      const bodyParser = require('koa-bodyparser');\n      const parseBody = bodyParser();\n      return async function universalEventsMiddleware(ctx, next) {\n        const emitter = globalEmitter.from(ctx);\n        if (ctx.method === 'POST' && ctx.path === '/_events') {\n          await parseBody(ctx, async () => {});\n          // $FlowFixMe\n          const {items} = ctx.request.body;\n          if (items) {\n            for (let index = 0; index < items.length; index++) {\n              const {type, payload} = items[index];\n              emitter.emit(type, payload);\n            }\n            ctx.status = 200;\n          } else {\n            ctx.status = 400;\n          }\n        }\n        // awaiting next before registering `then` on ctx.timing.end to try and get as much as possible\n        // into the event batch flush.\n        await next();\n        ctx.timing.end.then(() => {\n          emitter.flush();\n        });\n      };\n    },\n  });\n\nexport default ((plugin: any): FusionPlugin<DepsType, IEmitter>);\n","// @flow\n\nimport type {BatchStorage, BatchType} from '../types';\n\nclass InMemoryBatchStorage implements BatchStorage {\n  data = [];\n\n  add = (...toBeAdded: BatchType[]) => {\n    this.data.push(...toBeAdded);\n  };\n\n  addToStart = (...toBeAdded: BatchType[]) => {\n    this.data.unshift(...toBeAdded);\n  };\n\n  getAndClear = () => {\n    const events = this.data;\n    this.data = [];\n    return events;\n  };\n}\n\nexport const inMemoryBatchStorage = new InMemoryBatchStorage();\n","// @flow\n/* global window */\n\nimport type {BatchType, BatchStorage} from '../types';\nimport {inMemoryBatchStorage} from './in-memory';\n\nconst storageKey = 'fusion-events';\n\nconst get = () => {\n  try {\n    const events = JSON.parse(window.localStorage.getItem(storageKey));\n    return Array.isArray(events) ? events : [];\n  } catch (e) {\n    return [];\n  }\n};\n\nconst clear = () => {\n  try {\n    window.localStorage.removeItem(storageKey);\n  } catch (e) {\n    // do nothing\n  }\n};\n\nconst set = (events: BatchType[]) => {\n  try {\n    window.localStorage.setItem(storageKey, JSON.stringify(events));\n  } catch (e) {\n    // storage might be full, do nothing\n  }\n};\n\nclass LocalBatchStorage implements BatchStorage {\n  add = (...toBeAdded: BatchType[]) => {\n    set(toBeAdded.concat(get()));\n  };\n\n  addToStart = (...toBeAdded: BatchType[]) => {\n    set(toBeAdded.concat(get()));\n  };\n\n  getAndClear = () => {\n    const events = get();\n    clear();\n    return events;\n  };\n}\n\nlet isLocalStorageWritable = true;\n\ntry {\n  window.localStorage.setItem('test', 'test');\n  window.localStorage.removeItem('test');\n} catch (e) {\n  // if set/remove item fails localStorage is not writable\n  // fallback to in-memory storage\n  isLocalStorageWritable = false;\n}\n\nexport const localBatchStorage = isLocalStorageWritable\n  ? new LocalBatchStorage()\n  : inMemoryBatchStorage;\n","// @flow\n\nimport type {Token} from 'fusion-core';\nimport type {BatchStorage} from '../types';\nimport {createToken} from 'fusion-core';\n\nexport const UniversalEventsBatchStorageToken: Token<BatchStorage> = createToken(\n  'UniversalEventsBatchStorageToken'\n);\n\nexport {inMemoryBatchStorage} from './in-memory.js';\nexport {localBatchStorage} from './local-storage.js';\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-env browser */\nimport {createPlugin} from 'fusion-core';\nimport type {FusionPlugin} from 'fusion-core';\nimport {FetchToken} from 'fusion-tokens';\nimport type {Fetch} from 'fusion-tokens';\nimport Emitter from './emitter.js';\nimport type {\n  IEmitter,\n  UniversalEventsPluginDepsType as DepsType,\n  BatchStorage,\n} from './types.js';\nimport {\n  UniversalEventsBatchStorageToken,\n  localBatchStorage,\n} from './storage/index.js';\n\nexport class UniversalEmitter extends Emitter {\n  flush: any;\n  fetch: any;\n  interval: any;\n  storage: BatchStorage;\n\n  constructor(\n    fetch: Fetch,\n    storage: BatchStorage,\n    interval?: number = 5000\n  ): void {\n    super();\n    //privates\n    this.storage = storage;\n    this.flush = this.flushInternal.bind(this);\n    this.fetch = fetch;\n    this.setFrequency(interval);\n    window.addEventListener('visibilitychange', this.flushBeforeTerminated);\n  }\n  setFrequency(frequency: number): void {\n    window.clearInterval(this.interval);\n    this.interval = setInterval(this.flush, frequency);\n  }\n  emit(type: mixed, payload: mixed): void {\n    payload = super.mapEvent(type, payload);\n    super.handleEvent(type, payload);\n    this.storage.add({type, payload});\n  }\n  // match server api\n  from(): UniversalEmitter {\n    return this;\n  }\n  flushBeforeTerminated = () =>\n    document.visibilityState === 'hidden' && this.flushInternal();\n  async flushInternal(): Promise<void> {\n    const items = this.storage.getAndClear();\n    if (items.length === 0) return;\n\n    try {\n      const res = await this.fetch('/_events', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({items}),\n      });\n\n      if (!res.ok) {\n        // sending failed so put the logs back into storage\n        this.storage.addToStart(...items);\n      }\n    } catch (e) {\n      // sending failed so put the logs back into storage\n      this.storage.addToStart(...items);\n    }\n  }\n  teardown(): void {\n    window.removeEventListener('visibilitychange', this.flushBeforeTerminated);\n    clearInterval(this.interval);\n    this.interval = null;\n  }\n}\n\nconst plugin =\n  __BROWSER__ &&\n  createPlugin({\n    deps: {\n      fetch: FetchToken,\n      storage: UniversalEventsBatchStorageToken.optional,\n    },\n    provides: ({fetch, storage}) => {\n      return new UniversalEmitter(fetch, storage || localBatchStorage);\n    },\n    cleanup: async emitter => {\n      return emitter.teardown();\n    },\n  });\n\nexport default ((plugin: any): FusionPlugin<DepsType, IEmitter>);\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {createToken} from 'fusion-core';\nimport type {FusionPlugin, Token} from 'fusion-core';\n\nimport ServerEvents from './server.js';\nimport BrowserEvents from './browser.js';\nimport type {\n  IEmitter,\n  UniversalEventsPluginDepsType as DepsType,\n} from './types.js';\n\nconst UniversalEventsPlugin = __BROWSER__ ? BrowserEvents : ServerEvents;\n\n// eslint-disable-next-line prettier/prettier\nexport default ((UniversalEventsPlugin: any): FusionPlugin<DepsType, IEmitter>);\n\nexport const UniversalEventsToken: Token<IEmitter> = createToken(\n  'UniversalEventsToken'\n);\n\nexport * from './storage/index.js';\n\nexport type UniversalEventsDepsType = DepsType;\nexport type UniversalEventsType = IEmitter;\n"],"names":["globalEventType","UniversalEmitter","constructor","handlers","mappers","map","args","type","callback","getArgs","push","on","off","index","indexOf","splice","mapEvent","payload","ctx","globalMappers","concat","reduce","mapper","handleEvent","globalHandlers","forEach","handler","from","Error","emit","setFrequency","frequency","teardown","flush","validateHandler","TypeError","GlobalEmitter","Emitter","memoize","ScopedEmitter","parent","batch","flushed","handleBatchedEvent","length","plugin","createPlugin","provides","middleware","deps","globalEmitter","bodyParser","require","parseBody","universalEventsMiddleware","next","emitter","method","path","items","request","body","status","timing","end","then","InMemoryBatchStorage","data","add","toBeAdded","addToStart","unshift","getAndClear","events","inMemoryBatchStorage","storageKey","get","JSON","parse","window","localStorage","getItem","Array","isArray","e","clear","removeItem","set","setItem","stringify","LocalBatchStorage","isLocalStorageWritable","localBatchStorage","UniversalEventsBatchStorageToken","createToken","UniversalEventsPlugin","ServerEvents","UniversalEventsToken"],"mappings":"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"}