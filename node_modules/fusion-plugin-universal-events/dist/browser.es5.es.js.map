{"version":3,"file":"browser.es5.es.js","sources":["../src/emitter.js","../src/server.js","../src/storage/in-memory.js","../src/storage/local-storage.js","../src/storage/index.js","../src/browser.js","../src/index.js"],"sourcesContent":["/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Context} from 'fusion-core';\n\nimport type {IEmitter} from './types.js';\n\nconst globalEventType = '*';\nexport default class UniversalEmitter implements IEmitter {\n  handlers: any;\n  mappers: any;\n\n  constructor() {\n    this.handlers = {};\n    this.mappers = {};\n  }\n  map(...args: *): * {\n    const {type, callback} = getArgs(args);\n    if (!this.mappers[type]) this.mappers[type] = [];\n    this.mappers[type].push(callback);\n  }\n  on(...args: *): * {\n    const {type, callback} = getArgs(args);\n    if (!this.handlers[type]) this.handlers[type] = [];\n    this.handlers[type].push(callback);\n  }\n  off(...args: *): * {\n    const {type, callback} = getArgs(args);\n    const index = this.handlers[type].indexOf(callback);\n    if (index > -1) this.handlers[type].splice(index, 1);\n  }\n  mapEvent(type: mixed, payload: mixed, ctx?: Context): mixed {\n    const globalMappers = this.mappers[globalEventType] || [];\n    const mappers = (this.mappers[type] || []).concat(globalMappers);\n    return mappers.reduce((payload, mapper) => {\n      return mapper(payload, ctx, type);\n    }, payload);\n  }\n  handleEvent(type: mixed, payload: mixed, ctx?: Context): void {\n    const globalHandlers = this.handlers[globalEventType] || [];\n    const handlers = (this.handlers[type] || []).concat(globalHandlers);\n    handlers.forEach(handler => handler(payload, ctx, type));\n  }\n\n  /* eslint-disable-next-line  no-unused-vars */\n  from(ctx: Context) {\n    throw new Error('Not implemented.');\n  }\n  /* eslint-disable-next-line  no-unused-vars */\n  emit(type: mixed, payload: mixed, ctx?: Context) {\n    // throw new Error('Not implemented.');\n  }\n  /* eslint-disable-next-line  no-unused-vars */\n  setFrequency(frequency: number) {\n    throw new Error('Not implemented.');\n  }\n  teardown() {\n    throw new Error('Not implemented.');\n  }\n  flush() {\n    throw new Error('Not implemented.');\n  }\n}\n\nfunction validateHandler(handler) {\n  if (typeof handler !== 'function')\n    throw new TypeError('handler must be a function');\n}\n\nfunction getArgs(args) {\n  const type = typeof args[0] === 'string' ? args[0] : globalEventType;\n  const callback = args[1] || args[0];\n  validateHandler(callback);\n  return {type, callback};\n}\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-env node */\nimport {memoize, createPlugin} from 'fusion-core';\nimport type {FusionPlugin, Context} from 'fusion-core';\n\nimport Emitter from './emitter.js';\nimport type {\n  IEmitter,\n  UniversalEventsPluginDepsType as DepsType,\n} from './types.js';\n\nexport class GlobalEmitter extends Emitter {\n  from: any;\n  ctx: any;\n\n  constructor() {\n    super();\n    this.from = memoize(ctx => {\n      return new ScopedEmitter(ctx, this);\n    });\n  }\n  emit(type: mixed, payload: mixed, ctx?: Context): void {\n    payload = super.mapEvent(type, payload, this.ctx);\n    super.handleEvent(type, payload, ctx);\n  }\n  // mirror browser api\n  setFrequency() {}\n  teardown() {}\n}\n\nclass ScopedEmitter extends Emitter {\n  ctx: any;\n  parent: any;\n  batch: any;\n  flushed: any;\n\n  constructor(ctx, parent) {\n    super();\n    this.ctx = ctx;\n    this.parent = parent;\n    this.batch = [];\n    this.flushed = false;\n  }\n  emit(type, payload) {\n    // this logic exists to manage ensuring we send events after the batch\n    if (this.flushed) {\n      this.handleBatchedEvent({type, payload});\n    } else {\n      this.batch.push({type, payload});\n    }\n  }\n  handleBatchedEvent({type, payload}) {\n    payload = super.mapEvent(type, payload, this.ctx);\n    payload = this.parent.mapEvent(type, payload, this.ctx);\n    super.handleEvent(type, payload, this.ctx);\n    this.parent.handleEvent(type, payload, this.ctx);\n  }\n  flush() {\n    for (let index = 0; index < this.batch.length; index++) {\n      this.handleBatchedEvent(this.batch[index]);\n    }\n    this.batch = [];\n    this.flushed = true;\n  }\n  // mirror browser api\n  setFrequency() {}\n  teardown() {}\n}\n\nconst plugin =\n  __NODE__ &&\n  createPlugin({\n    provides: () => new GlobalEmitter(),\n    middleware: (deps, globalEmitter) => {\n      const bodyParser = require('koa-bodyparser');\n      const parseBody = bodyParser();\n      return async function universalEventsMiddleware(ctx, next) {\n        const emitter = globalEmitter.from(ctx);\n        if (ctx.method === 'POST' && ctx.path === '/_events') {\n          await parseBody(ctx, async () => {});\n          // $FlowFixMe\n          const {items} = ctx.request.body;\n          if (items) {\n            for (let index = 0; index < items.length; index++) {\n              const {type, payload} = items[index];\n              emitter.emit(type, payload);\n            }\n            ctx.status = 200;\n          } else {\n            ctx.status = 400;\n          }\n        }\n        // awaiting next before registering `then` on ctx.timing.end to try and get as much as possible\n        // into the event batch flush.\n        await next();\n        ctx.timing.end.then(() => {\n          emitter.flush();\n        });\n      };\n    },\n  });\n\nexport default ((plugin: any): FusionPlugin<DepsType, IEmitter>);\n","// @flow\n\nimport type {BatchStorage, BatchType} from '../types';\n\nclass InMemoryBatchStorage implements BatchStorage {\n  data = [];\n\n  add = (...toBeAdded: BatchType[]) => {\n    this.data.push(...toBeAdded);\n  };\n\n  addToStart = (...toBeAdded: BatchType[]) => {\n    this.data.unshift(...toBeAdded);\n  };\n\n  getAndClear = () => {\n    const events = this.data;\n    this.data = [];\n    return events;\n  };\n}\n\nexport const inMemoryBatchStorage = new InMemoryBatchStorage();\n","// @flow\n/* global window */\n\nimport type {BatchType, BatchStorage} from '../types';\nimport {inMemoryBatchStorage} from './in-memory';\n\nconst storageKey = 'fusion-events';\n\nconst get = () => {\n  try {\n    const events = JSON.parse(window.localStorage.getItem(storageKey));\n    return Array.isArray(events) ? events : [];\n  } catch (e) {\n    return [];\n  }\n};\n\nconst clear = () => {\n  try {\n    window.localStorage.removeItem(storageKey);\n  } catch (e) {\n    // do nothing\n  }\n};\n\nconst set = (events: BatchType[]) => {\n  try {\n    window.localStorage.setItem(storageKey, JSON.stringify(events));\n  } catch (e) {\n    // storage might be full, do nothing\n  }\n};\n\nclass LocalBatchStorage implements BatchStorage {\n  add = (...toBeAdded: BatchType[]) => {\n    set(toBeAdded.concat(get()));\n  };\n\n  addToStart = (...toBeAdded: BatchType[]) => {\n    set(toBeAdded.concat(get()));\n  };\n\n  getAndClear = () => {\n    const events = get();\n    clear();\n    return events;\n  };\n}\n\nlet isLocalStorageWritable = true;\n\ntry {\n  window.localStorage.setItem('test', 'test');\n  window.localStorage.removeItem('test');\n} catch (e) {\n  // if set/remove item fails localStorage is not writable\n  // fallback to in-memory storage\n  isLocalStorageWritable = false;\n}\n\nexport const localBatchStorage = isLocalStorageWritable\n  ? new LocalBatchStorage()\n  : inMemoryBatchStorage;\n","// @flow\n\nimport type {Token} from 'fusion-core';\nimport type {BatchStorage} from '../types';\nimport {createToken} from 'fusion-core';\n\nexport const UniversalEventsBatchStorageToken: Token<BatchStorage> = createToken(\n  'UniversalEventsBatchStorageToken'\n);\n\nexport {inMemoryBatchStorage} from './in-memory.js';\nexport {localBatchStorage} from './local-storage.js';\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-env browser */\nimport {createPlugin} from 'fusion-core';\nimport type {FusionPlugin} from 'fusion-core';\nimport {FetchToken} from 'fusion-tokens';\nimport type {Fetch} from 'fusion-tokens';\nimport Emitter from './emitter.js';\nimport type {\n  IEmitter,\n  UniversalEventsPluginDepsType as DepsType,\n  BatchStorage,\n} from './types.js';\nimport {\n  UniversalEventsBatchStorageToken,\n  localBatchStorage,\n} from './storage/index.js';\n\nexport class UniversalEmitter extends Emitter {\n  flush: any;\n  fetch: any;\n  interval: any;\n  storage: BatchStorage;\n\n  constructor(\n    fetch: Fetch,\n    storage: BatchStorage,\n    interval?: number = 5000\n  ): void {\n    super();\n    //privates\n    this.storage = storage;\n    this.flush = this.flushInternal.bind(this);\n    this.fetch = fetch;\n    this.setFrequency(interval);\n    window.addEventListener('visibilitychange', this.flushBeforeTerminated);\n  }\n  setFrequency(frequency: number): void {\n    window.clearInterval(this.interval);\n    this.interval = setInterval(this.flush, frequency);\n  }\n  emit(type: mixed, payload: mixed): void {\n    payload = super.mapEvent(type, payload);\n    super.handleEvent(type, payload);\n    this.storage.add({type, payload});\n  }\n  // match server api\n  from(): UniversalEmitter {\n    return this;\n  }\n  flushBeforeTerminated = () =>\n    document.visibilityState === 'hidden' && this.flushInternal();\n  async flushInternal(): Promise<void> {\n    const items = this.storage.getAndClear();\n    if (items.length === 0) return;\n\n    try {\n      const res = await this.fetch('/_events', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({items}),\n      });\n\n      if (!res.ok) {\n        // sending failed so put the logs back into storage\n        this.storage.addToStart(...items);\n      }\n    } catch (e) {\n      // sending failed so put the logs back into storage\n      this.storage.addToStart(...items);\n    }\n  }\n  teardown(): void {\n    window.removeEventListener('visibilitychange', this.flushBeforeTerminated);\n    clearInterval(this.interval);\n    this.interval = null;\n  }\n}\n\nconst plugin =\n  __BROWSER__ &&\n  createPlugin({\n    deps: {\n      fetch: FetchToken,\n      storage: UniversalEventsBatchStorageToken.optional,\n    },\n    provides: ({fetch, storage}) => {\n      return new UniversalEmitter(fetch, storage || localBatchStorage);\n    },\n    cleanup: async emitter => {\n      return emitter.teardown();\n    },\n  });\n\nexport default ((plugin: any): FusionPlugin<DepsType, IEmitter>);\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {createToken} from 'fusion-core';\nimport type {FusionPlugin, Token} from 'fusion-core';\n\nimport ServerEvents from './server.js';\nimport BrowserEvents from './browser.js';\nimport type {\n  IEmitter,\n  UniversalEventsPluginDepsType as DepsType,\n} from './types.js';\n\nconst UniversalEventsPlugin = __BROWSER__ ? BrowserEvents : ServerEvents;\n\n// eslint-disable-next-line prettier/prettier\nexport default ((UniversalEventsPlugin: any): FusionPlugin<DepsType, IEmitter>);\n\nexport const UniversalEventsToken: Token<IEmitter> = createToken(\n  'UniversalEventsToken'\n);\n\nexport * from './storage/index.js';\n\nexport type UniversalEventsDepsType = DepsType;\nexport type UniversalEventsType = IEmitter;\n"],"names":["globalEventType","UniversalEmitter","handlers","mappers","map","args","getArgs","type","callback","push","on","off","index","indexOf","splice","mapEvent","payload","ctx","globalMappers","concat","reduce","mapper","handleEvent","globalHandlers","forEach","handler","from","Error","emit","setFrequency","frequency","teardown","flush","validateHandler","TypeError","GlobalEmitter","memoize","ScopedEmitter","Emitter","parent","batch","flushed","handleBatchedEvent","length","InMemoryBatchStorage","data","add","addToStart","unshift","getAndClear","events","inMemoryBatchStorage","storageKey","get","JSON","parse","window","localStorage","getItem","Array","isArray","e","clear","removeItem","set","setItem","stringify","LocalBatchStorage","toBeAdded","isLocalStorageWritable","localBatchStorage","UniversalEventsBatchStorageToken","createToken","fetch","storage","interval","flushBeforeTerminated","document","visibilityState","flushInternal","bind","addEventListener","clearInterval","setInterval","items","method","headers","body","res","ok","removeEventListener","plugin","createPlugin","deps","FetchToken","optional","provides","cleanup","emitter","UniversalEventsPlugin","BrowserEvents","UniversalEventsToken"],"mappings":"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"}