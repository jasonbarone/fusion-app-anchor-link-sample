{"version":3,"file":"browser.es5.js","sources":["../src/modules/Status.js","../src/modules/Redirect.js","../src/modules/ServerRouter.js","../src/modules/Route.js","../src/server.js","../src/modules/BrowserRouter.js","../src/browser.js","../src/modules/ServerHistory.js","../src/plugin.js","../src/types.js","../src/index.js"],"sourcesContent":["/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\n\ntype StatusPropsType = {\n  children: React.Node,\n  code?: string | number,\n};\ntype StatusContextType = {\n  router: {\n    staticContext: {\n      setCode: (code: number) => void,\n    },\n  },\n};\nexport class Status extends React.Component<StatusPropsType> {\n  constructor(props: StatusPropsType, context: StatusContextType) {\n    super(props, context);\n    const {\n      router: {staticContext},\n    } = context;\n    if (staticContext && staticContext.setCode) {\n      staticContext.setCode(parseInt(this.props.code, 10));\n    }\n  }\n\n  render() {\n    const children = this.props && this.props.children;\n    return Array.isArray(children) ? children[0] : children;\n  }\n}\n\nStatus.contextTypes = {\n  router: PropTypes.shape({\n    staticContext: PropTypes.object,\n  }),\n};\n\nexport const NotFound = <TProps: {children: React.Node}>(props: TProps) => (\n  <Status code={404}>{props.children}</Status>\n);\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport type {LocationShapeType, RedirectType} from '../types.js';\n\ntype PropsType = {|\n  to: string | LocationShapeType,\n  push?: boolean,\n  from?: string,\n  exact?: boolean,\n  strict?: boolean,\n  code?: number | string,\n  children?: React.Node,\n|};\ntype ContextType = {\n  router: {\n    history: {\n      push: (el: string | LocationShapeType) => void,\n      replace: (el: string | LocationShapeType) => void,\n    },\n    staticContext?: {\n      setCode: (code: number) => void,\n      redirect: (el: string | LocationShapeType) => void,\n    },\n  },\n};\nexport class Redirect extends React.Component<PropsType> {\n  context: ContextType;\n\n  constructor(props: PropsType, context: ContextType) {\n    super(props, context);\n    if (this.isStatic(context)) this.perform();\n  }\n\n  static defaultProps = {\n    push: false,\n    code: 307,\n  };\n\n  componentDidMount() {\n    if (!this.isStatic()) this.perform();\n  }\n\n  isStatic(context: ContextType = this.context): boolean {\n    return !!(context && context.router && context.router.staticContext);\n  }\n\n  perform() {\n    const {history, staticContext} = this.context.router;\n    const {push, to, code} = this.props;\n\n    if (__NODE__ && staticContext) {\n      staticContext.setCode(parseInt(code, 10));\n      staticContext.redirect(to);\n      return;\n    }\n\n    if (push) {\n      history.push(to);\n    } else {\n      history.replace(to);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nRedirect.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n    }).isRequired,\n    staticContext: PropTypes.object,\n  }).isRequired,\n};\n\n// Sanity type checking\n(Redirect: RedirectType);\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nimport {Router as RouterUntyped} from 'react-router-dom';\n\nimport type {RouterType, RouterHistoryType} from '../types.js';\n\nconst BaseRouter: RouterType = (RouterUntyped: any);\n\ntype PropsType = {\n  context?: any,\n  onRoute?: Function,\n  history: RouterHistoryType,\n  Provider?: RouterType,\n  basename?: string,\n  children?: React.Node,\n};\n\n/**\n * The public top-level API for a \"static\" <Router>, so-called because it\n * can't actually change the current location. Instead, it just records\n * location changes in a context object. Useful mainly in testing and\n * server-rendering scenarios.\n */\nclass ServerRouter extends React.Component<PropsType> {\n  static defaultProps = {\n    basename: '',\n    context: {},\n    Provider: BaseRouter,\n    onRoute: () => {},\n  };\n\n  getChildContext() {\n    return {\n      router: {\n        staticContext: this.props.context || {},\n      },\n      onRoute: (routeData: any) =>\n        this.props.onRoute && this.props.onRoute(routeData),\n    };\n  }\n\n  render() {\n    const {Provider, history, basename, children} = this.props;\n    if (!Provider) throw new Error('Missing Provider for Server Router');\n    return (\n      <Provider basename={basename} history={history}>\n        {children}\n      </Provider>\n    );\n  }\n}\n\nServerRouter.childContextTypes = {\n  router: () => {},\n  onRoute: () => {},\n};\n\nconst ServerRouterTyped: React.ComponentType<PropsType> = ServerRouter;\nexport {ServerRouterTyped as ServerRouter};\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route as ReactRouterRouteUntyped} from 'react-router-dom';\n\nimport type {RouteType} from '../types.js';\n\nconst ReactRouterRoute: RouteType = ReactRouterRouteUntyped;\n\nconst isEmptyChildren = (children: React.Node) =>\n  React.Children.count(children) === 0;\n\ntype PropsType = {\n  trackingId?: any,\n  component?: React.ComponentType<*>,\n  render?: (...props: any) => React.Node,\n  children?: ((routeProps: {match: MatchType}) => React.Node) | React.Node,\n};\ntype ContextType = {\n  onRoute: any,\n};\ntype MatchType = {\n  isExact: boolean,\n  path: string,\n  params: Object,\n  url: string,\n};\nfunction Route(props: PropsType, context: ContextType) {\n  const {trackingId, component, render, children, ...remainingProps} = props;\n\n  return (\n    <ReactRouterRoute\n      {...remainingProps}\n      // eslint-disable-next-line react/no-children-prop\n      children={(routeProps: {match: MatchType}) => {\n        const {match} = routeProps;\n        if (match && match.isExact) {\n          context.onRoute({\n            page: match.path,\n            title: trackingId || match.path,\n            params: match.params,\n          });\n        }\n\n        if (component)\n          return match ? React.createElement(component, routeProps) : null;\n\n        if (render) return match ? render(routeProps) : null;\n\n        if (typeof children === 'function') return children(routeProps);\n\n        if (children && !isEmptyChildren(children))\n          return React.Children.only(children);\n\n        return null;\n      }}\n    />\n  );\n}\n\nRoute.contextTypes = {\n  onRoute: PropTypes.func.isRequired,\n};\n\nRoute.displayName = 'FusionRoute';\n\nexport {Route};\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  BrowserRouter as BrowserRouterUntyped,\n  HashRouter as HashRouterUntyped,\n  Link as LinkUntyped,\n  MemoryRouter as MemoryRouterUntyped,\n  NavLink as NavLinkUntyped,\n  Prompt as PromptUntyped,\n  Router as _Router,\n  Switch as SwitchUntyped,\n  matchPath as matchPathUntyped,\n  withRouter as withRouterUntyped,\n} from 'react-router-dom';\n\nimport {Status, NotFound} from './modules/Status';\nimport {Redirect} from './modules/Redirect';\nimport {ServerRouter as Router} from './modules/ServerRouter';\nimport {Route} from './modules/Route';\n\nimport type {\n  BrowserRouterType,\n  HashRouterType,\n  LinkType,\n  MemoryRouterType,\n  NavLinkType,\n  PromptType,\n  SwitchType,\n  matchPathType,\n  withRouterType,\n} from './types.js';\n\n/**\n * Cast each of these imports from react-router-dom to a copied-version of their\n * types.  This is necessary as the libdef defined types will not be accessible to\n * consumers of this package.\n */\nconst BrowserRouter: BrowserRouterType = BrowserRouterUntyped;\nconst HashRouter: HashRouterType = HashRouterUntyped;\nconst Link: LinkType = LinkUntyped;\nconst MemoryRouter: MemoryRouterType = MemoryRouterUntyped;\nconst NavLink: NavLinkType = NavLinkUntyped;\nconst Prompt: PromptType = PromptUntyped;\nconst Switch: SwitchType = SwitchUntyped;\nconst matchPath: matchPathType = matchPathUntyped;\nconst withRouter: withRouterType = withRouterUntyped;\n\nexport {\n  BrowserRouter,\n  HashRouter,\n  Link,\n  MemoryRouter,\n  NavLink,\n  Prompt,\n  _Router,\n  Switch,\n  matchPath,\n  withRouter,\n  Status,\n  NotFound,\n  Redirect,\n  Router,\n  Route,\n};\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {Router as BaseRouterUntyped} from 'react-router-dom';\n\nimport type {RouterType, RouterHistoryType} from '../types.js';\n\nexport {Status, NotFound} from './Status.js';\nexport {Redirect} from './Redirect.js';\n\nconst BaseRouter: RouterType = (BaseRouterUntyped: any);\n\ntype PropsType = {|\n  context?: any,\n  onRoute?: Function,\n  history: RouterHistoryType,\n  Provider?: RouterType,\n  basename?: string,\n  children?: React.Node,\n|};\ntype ContextType = {\n  __IS_PREPARE__: boolean,\n};\nclass BrowserRouter extends React.Component<PropsType> {\n  lastTitle: ?string;\n  context: ContextType;\n\n  static defaultProps = {\n    onRoute: () => {},\n    Provider: BaseRouter,\n  };\n\n  constructor(props: PropsType, context: ContextType) {\n    super(props, context);\n    this.lastTitle = null;\n  }\n\n  getChildContext() {\n    const {__IS_PREPARE__} = this.context;\n    return {\n      onRoute: (routeData: any) => {\n        if (routeData.title !== this.lastTitle && !__IS_PREPARE__) {\n          this.lastTitle = routeData.title;\n          this.props.onRoute && this.props.onRoute(routeData);\n        }\n      },\n    };\n  }\n\n  render() {\n    const {Provider, history, basename} = this.props;\n    if (!Provider) throw new Error('Missing Provider for Browser Router');\n    return (\n      <Provider basename={basename} history={history}>\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nBrowserRouter.propTypes = {\n  children: PropTypes.node,\n  onRoute: PropTypes.func,\n  history: PropTypes.object,\n  Provider: PropTypes.any,\n  basename: PropTypes.string,\n};\n\nBrowserRouter.contextTypes = {\n  __IS_PREPARE__: PropTypes.bool,\n};\n\nBrowserRouter.childContextTypes = {\n  onRoute: PropTypes.func.isRequired,\n};\n\nconst BrowserRouterTyped: React.ComponentType<PropsType> = BrowserRouter;\nexport {BrowserRouterTyped as Router};\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  BrowserRouter as BrowserRouterUntyped,\n  HashRouter as HashRouterUntyped,\n  Link as LinkUntyped,\n  MemoryRouter as MemoryRouterUntyped,\n  NavLink as NavLinkUntyped,\n  Prompt as PromptUntyped,\n  StaticRouter as StaticRouterUntyped,\n  Switch as SwitchUntyped,\n  matchPath as matchPathUntyped,\n  withRouter as withRouterUntyped,\n} from 'react-router-dom';\n\nimport {Status, NotFound} from './modules/Status';\nimport {Redirect} from './modules/Redirect';\nimport {Router} from './modules/BrowserRouter';\nimport {Route} from './modules/Route';\n\nimport type {\n  BrowserRouterType,\n  HashRouterType,\n  LinkType,\n  MemoryRouterType,\n  NavLinkType,\n  PromptType,\n  StaticRouterType,\n  SwitchType,\n  matchPathType,\n  withRouterType,\n} from './types.js';\n\n/**\n * Cast each of these imports from react-router-dom to a copied-version of their\n * types.  This is necessary as the libdef defined types will not be accessible to\n * consumers of this package.\n */\nconst BrowserRouter: BrowserRouterType = BrowserRouterUntyped;\nconst HashRouter: HashRouterType = HashRouterUntyped;\nconst Link: LinkType = LinkUntyped;\nconst MemoryRouter: MemoryRouterType = MemoryRouterUntyped;\nconst NavLink: NavLinkType = NavLinkUntyped;\nconst Prompt: PromptType = PromptUntyped;\nconst StaticRouter: StaticRouterType = StaticRouterUntyped;\nconst Switch: SwitchType = SwitchUntyped;\nconst matchPath: matchPathType = matchPathUntyped;\nconst withRouter: withRouterType = withRouterUntyped;\n\nexport {\n  BrowserRouter,\n  HashRouter,\n  Link,\n  MemoryRouter,\n  NavLink,\n  Prompt,\n  StaticRouter,\n  Switch,\n  matchPath,\n  withRouter,\n  Status,\n  NotFound,\n  Redirect,\n  Router,\n  Route,\n};\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {createPath, parsePath} from 'history';\n\nimport {addRoutePrefix, removeRoutePrefix} from './utils.js';\nimport type {RouterHistoryType, LocationType} from '../types.js';\n\nconst createLocation = (\n  path: string | LocationType,\n  prefix: string\n): LocationType => {\n  const unprefixedPath = removeRoutePrefix(path, prefix);\n  return parsePath(unprefixedPath);\n};\n\nconst createPrefixedURL = (\n  location: string | LocationType,\n  prefix: string\n): string | LocationType => {\n  if (typeof location === 'string') {\n    return addRoutePrefix(location, prefix);\n  } else {\n    return createPath(addRoutePrefix(location, prefix));\n  }\n};\n\nconst createURL = (\n  location: string | LocationType,\n  prefix: string\n): string | LocationType => {\n  if (typeof location === 'string') {\n    return removeRoutePrefix(location, prefix);\n  } else {\n    return createPath(removeRoutePrefix(location, prefix));\n  }\n};\n\nconst staticHandler = methodName => () => {\n  throw new Error(`You cannot ${methodName} with server side <Router>`);\n};\n\nconst noop = () => {};\n\ntype ContextType = {\n  action: ?string,\n  location: any,\n  url: ?string,\n};\n\nexport function createServerHistory(\n  basename: string,\n  context: ContextType,\n  location: string | LocationType\n): RouterHistoryType {\n  function createHref(location: string | LocationType): string | LocationType {\n    return createPrefixedURL(location, basename);\n  }\n  function push(path: string) {\n    context.action = 'PUSH';\n    context.location = createLocation(path, basename);\n    const url = createURL(path, basename);\n    if (typeof url === 'string') {\n      context.url = url;\n    }\n  }\n\n  function replace(path: string) {\n    context.action = 'REPLACE';\n    context.location = createLocation(path, basename);\n    const url = createURL(path, basename);\n    if (typeof url === 'string') {\n      context.url = url;\n    }\n  }\n  const history = {\n    length: 0,\n    createHref,\n    action: 'POP',\n    location: createLocation(location, basename),\n    push,\n    replace,\n    go: staticHandler('go'),\n    goBack: staticHandler('back'),\n    goForward: staticHandler('forward'),\n    listen: () => noop,\n  };\n  return (history: any);\n}\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\nimport {Router as DefaultProvider} from 'react-router-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\n\nimport {UniversalEventsToken} from 'fusion-plugin-universal-events';\nimport {createPlugin, createToken, html, unescape, memoize} from 'fusion-core';\nimport type {Token, Context, FusionPlugin} from 'fusion-core';\n\nimport {Router as ServerRouter} from './server.js';\nimport {Router as BrowserRouter} from './browser.js';\nimport {createServerHistory} from './modules/ServerHistory.js';\nimport {addRoutePrefix} from './modules/utils.js';\nimport type {RouterHistoryType} from './types.js';\n\ntype ProviderPropsType = {\n  history: RouterHistoryType,\n  basename?: string,\n  children?: React.Node,\n};\n\ntype HistoryWrapperType = {\n  from: (\n    ctx: Context\n  ) => {\n    history: RouterHistoryType,\n  },\n};\n\nexport const RouterProviderToken: Token<\n  React.ComponentType<ProviderPropsType>\n> = createToken('RouterProvider');\n\nexport const RouterToken: Token<HistoryWrapperType> = createToken('Router');\n\nconst Router = __NODE__ ? ServerRouter : BrowserRouter;\n\ntype PluginDepsType = {\n  emitter: typeof UniversalEventsToken.optional,\n  Provider: typeof RouterProviderToken.optional,\n};\n\nconst plugin: FusionPlugin<PluginDepsType, HistoryWrapperType> = createPlugin({\n  deps: {\n    emitter: UniversalEventsToken.optional,\n    Provider: RouterProviderToken.optional,\n  },\n  middleware: ({emitter, Provider = DefaultProvider}, self) => {\n    return async (ctx, next) => {\n      const prefix = ctx.prefix || '';\n      if (!ctx.element) {\n        return next();\n      }\n      const myAPI = self.from(ctx);\n      if (__NODE__) {\n        let pageData = {\n          title: ctx.path,\n          page: ctx.path,\n        };\n        const context = {\n          action: null,\n          location: null,\n          url: null,\n          setCode: code => {\n            ctx.status = code;\n          },\n          redirect: (url: string) => {\n            const toUrl = addRoutePrefix(url, prefix);\n            if (typeof toUrl === 'string') {\n              ctx.redirect(toUrl);\n            }\n          },\n        };\n        // Expose the history object\n        const history = createServerHistory(prefix, context, prefix + ctx.url);\n        myAPI.history = history;\n        ctx.element = (\n          <Router\n            history={history}\n            Provider={Provider}\n            onRoute={d => {\n              pageData = d;\n            }}\n            basename={prefix}\n            context={context}\n          >\n            {ctx.element}\n          </Router>\n        );\n        return next().then(() => {\n          ctx.template.body.push(\n            html`\n              <script id=\"__ROUTER_DATA__\" type=\"application/json\">\n                ${JSON.stringify(pageData)}\n              </script>\n            `\n          );\n\n          if (emitter) {\n            const scopedEmitter = emitter.from(ctx);\n            const emitTiming = type => timing => {\n              scopedEmitter.emit(type, {\n                title: pageData.title,\n                page: pageData.page,\n                status: ctx.status,\n                timing,\n              });\n            };\n            scopedEmitter.map(payload => {\n              if (payload && typeof payload === 'object') {\n                payload.__url__ = pageData.title;\n              }\n              return payload;\n            });\n            ctx.timing.end.then(timing => {\n              emitTiming('pageview:server')(timing);\n              ctx.timing.render.then(emitTiming('render:server'));\n            });\n          }\n        });\n      } else if (__BROWSER__) {\n        // TODO(#3): We should consider adding render/downstream/upstream timings for the browser\n        let pageData = {};\n        const element = document.getElementById('__ROUTER_DATA__');\n        if (element) {\n          pageData = JSON.parse(unescape(element.textContent));\n        }\n        emitter &&\n          emitter.map(payload => {\n            if (payload && typeof payload === 'object') {\n              payload.__url__ = pageData.title;\n              payload.__urlParams__ = pageData.params;\n            }\n            return payload;\n          });\n        // Expose the history object\n        const history = createBrowserHistory({basename: ctx.prefix});\n        myAPI.history = history;\n        ctx.element = (\n          <Router\n            history={history}\n            Provider={Provider}\n            basename={ctx.prefix}\n            onRoute={payload => {\n              pageData = payload;\n              emitter && emitter.emit('pageview:browser', payload);\n            }}\n          >\n            {ctx.element}\n          </Router>\n        );\n        return next();\n      }\n    };\n  },\n  provides() {\n    return {\n      from: memoize(() => {\n        const api: {history: RouterHistoryType} = ({\n          history: null,\n        }: any);\n        return api;\n      }),\n    };\n  },\n});\n\nexport default plugin;\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nexport type LocationType = {\n  pathname: string,\n  search: string,\n  hash: string,\n  state?: Object,\n  key?: string,\n};\n\nexport type LocationShapeType = {\n  pathname?: string,\n  search?: string,\n  hash?: string,\n  state?: Object,\n};\n\n/* Types below adapted from flow-typed's libdef for react-router-dom\n * (https://github.com/flow-typed/flow-typed/blob/master/definitions/npm/react-router-dom_v4.x.x/flow_v0.63.x-/react-router-dom_v4.x.x.js)\n */\nexport type BrowserRouterType = React.ComponentType<{|\n  basename?: string,\n  forceRefresh?: boolean,\n  getUserConfirmation?: GetUserConfirmation,\n  keyLength?: number,\n  children?: React.Node,\n|}>;\n\nexport type HashRouterType = React.ComponentType<{|\n  basename?: string,\n  getUserConfirmation?: GetUserConfirmation,\n  hashType?: 'slash' | 'noslash' | 'hashbang',\n  children?: React.Node,\n|}>;\n\nexport type LinkType = React.ComponentType<{\n  className?: string,\n  to: string | LocationShapeType,\n  replace?: boolean,\n  children?: React.Node,\n}>;\n\nexport type NavLinkType = React.ComponentType<{\n  to?: string | LocationShapeType,\n  activeClassName?: string,\n  className?: string,\n  activeStyle?: Object,\n  style?: Object,\n  isActive?: (match: MatchType, location: LocationType) => boolean,\n  children?: React.Node,\n  exact?: boolean,\n  strict?: boolean,\n}>;\n\n// NOTE: Below are mostly duplicated from react-router.\nexport type HistoryActionType = 'PUSH' | 'REPLACE' | 'POP';\n\nexport type RouterHistoryType = {\n  length: number,\n  location: LocationType,\n  action: HistoryActionType,\n  listen(\n    callback: (location: LocationType, action: HistoryActionType) => void\n  ): () => void,\n  push(path: string | LocationShapeType, state?: any): void,\n  replace(path: string | LocationShapeType, state?: any): void,\n  go(n: number): void,\n  goBack(): void,\n  goForward(): void,\n  canGo?: (n: number) => boolean,\n  block(\n    callback: (location: LocationType, action: HistoryActionType) => boolean\n  ): void,\n  // createMemoryHistory\n  index?: number,\n  entries?: Array<LocationType>,\n};\n\nexport type MatchType = {\n  params: {[key: string]: ?string},\n  isExact: boolean,\n  path: string,\n  url: string,\n};\n\nexport type ContextRouterType = {|\n  history: RouterHistoryType,\n  location: LocationType,\n  match: MatchType,\n  staticContext?: StaticRouterContextType,\n|};\n\ntype ContextRouterVoid = {\n  history: RouterHistoryType | void,\n  location: LocationType | void,\n  match: MatchType | void,\n  staticContext?: StaticRouterContextType | void,\n};\n\ntype GetUserConfirmation = (\n  message: string,\n  callback: (confirmed: boolean) => void\n) => void;\n\nexport type StaticRouterContextType = {\n  url?: string,\n};\n\nexport type StaticRouterType = React.ComponentType<{|\n  basename?: string,\n  location?: string | LocationType,\n  context: StaticRouterContextType,\n  children?: React.Node,\n|}>;\n\nexport type MemoryRouterType = React.ComponentType<{|\n  initialEntries?: Array<LocationShapeType | string>,\n  initialIndex?: number,\n  getUserConfirmation?: GetUserConfirmation,\n  keyLength?: number,\n  children?: React.Node,\n|}>;\n\nexport type RouterType = React.ComponentType<{\n  history: RouterHistoryType,\n  basename?: string,\n  children?: React.Node,\n}>;\n\nexport type PromptType = React.ComponentType<{|\n  message: string | ((location: LocationType) => string | boolean),\n  when?: boolean,\n|}>;\n\nexport type RedirectType = React.ComponentType<{|\n  to: string | LocationShapeType,\n  push?: boolean,\n  from?: string,\n  exact?: boolean,\n  strict?: boolean,\n  code?: number | string,\n  children?: React.Node,\n|}>;\n\nexport type RouteType = React.ComponentType<{|\n  component?: React.ComponentType<*>,\n  render?: (router: ContextRouterType) => React.Node,\n  children?: React.ComponentType<ContextRouterType> | React.Node,\n  path?: string | Array<string>,\n  exact?: boolean,\n  strict?: boolean,\n  location?: LocationShapeType,\n  sensitive?: boolean,\n|}>;\n\nexport type SwitchType = React.ComponentType<{|\n  children?: React.Node,\n  location?: LocationType,\n|}>;\n\nexport type withRouterType = <WrappedComponent: React.ComponentType<*>>(\n  Component: WrappedComponent\n) => React.ComponentType<\n  $Diff<React.ElementConfig<$Supertype<WrappedComponent>>, ContextRouterVoid>\n>;\n\ntype MatchPathOptions = {\n  path?: string,\n  exact?: boolean,\n  sensitive?: boolean,\n  strict?: boolean,\n};\n\nexport type matchPathType = (\n  pathname: string,\n  options?: MatchPathOptions | string,\n  parent?: MatchType\n) => null | MatchType;\n\nexport type generatePathType = (pattern?: string, params?: Object) => string;\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport plugin, {RouterProviderToken, RouterToken} from './plugin';\nimport * as server from './server';\nimport * as browser from './browser';\n\ndeclare var __BROWSER__: Boolean;\nconst BrowserRouter = __BROWSER__\n  ? browser.BrowserRouter\n  : server.BrowserRouter;\nconst HashRouter = __BROWSER__ ? browser.HashRouter : server.HashRouter;\nconst Link = __BROWSER__ ? browser.Link : server.Link;\nconst matchPath = __BROWSER__ ? browser.matchPath : server.matchPath;\nconst MemoryRouter = __BROWSER__ ? browser.MemoryRouter : server.MemoryRouter;\nconst NavLink = __BROWSER__ ? browser.NavLink : server.NavLink;\nconst Prompt = __BROWSER__ ? browser.Prompt : server.Prompt;\nconst Route = __BROWSER__ ? browser.Route : server.Route;\nconst Router = __BROWSER__ ? browser.Router : server.Router;\nconst Switch = __BROWSER__ ? browser.Switch : server.Switch;\nconst withRouter = __BROWSER__ ? browser.withRouter : server.withRouter;\n\nconst NotFound = __BROWSER__ ? browser.NotFound : server.NotFound;\nconst Redirect = __BROWSER__ ? browser.Redirect : server.Redirect;\nconst Status = __BROWSER__ ? browser.Status : server.Status;\n\nexport default plugin;\nexport {\n  BrowserRouter,\n  HashRouter,\n  Link,\n  matchPath,\n  MemoryRouter,\n  NavLink,\n  NotFound,\n  Prompt,\n  Redirect,\n  Route,\n  Router,\n  Status,\n  Switch,\n  withRouter,\n  RouterProviderToken,\n  RouterToken,\n};\n\nexport * from './types.js';\n"],"names":["Status","props","context","staticContext","router","setCode","parseInt","code","render","children","Array","isArray","React","contextTypes","PropTypes","shape","object","NotFound","React.createElement","Redirect","isStatic","perform","componentDidMount","history","push","to","replace","defaultProps","func","isRequired","BaseRouter","RouterUntyped","ServerRouter","getChildContext","onRoute","routeData","Provider","basename","Error","childContextTypes","ReactRouterRoute","ReactRouterRouteUntyped","isEmptyChildren","count","Route","trackingId","component","remainingProps","routeProps","match","isExact","page","path","title","params","only","displayName","BaseRouterUntyped","BrowserRouter","lastTitle","__IS_PREPARE__","propTypes","node","any","string","bool","BrowserRouterTyped","BrowserRouterUntyped","HashRouter","HashRouterUntyped","Link","LinkUntyped","MemoryRouter","MemoryRouterUntyped","NavLink","NavLinkUntyped","Prompt","PromptUntyped","Switch","SwitchUntyped","matchPath","matchPathUntyped","withRouter","withRouterUntyped","RouterProviderToken","createToken","RouterToken","Router","plugin","createPlugin","deps","emitter","UniversalEventsToken","optional","middleware","self","DefaultProvider","ctx","next","prefix","element","myAPI","from","pageData","document","getElementById","JSON","parse","unescape","textContent","map","payload","__url__","__urlParams__","createBrowserHistory","emit","provides","memoize","api","browser"],"mappings":"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"}